// Представьте что вы работаете в большой компании где используется модульная архитектура.
// Ваш коллега написал модуль с какой-то логикой (вы не знаете) и передает в вашу программу какие-то данные.
// Вы же пишете функцию которая считывает две переменных типа string, а возвращает число типа int64 которое нужно получить сложением этих строк.

// Но не было бы так все просто, ведь ваш коллега не пишет на Go, и он зол из-за того, что гоферам платят больше.
// Поэтому он решил подшутить над вами и подсунул вам свинью.Он придумал вставлять мусор в строки перед тем как вызывать вашу функцию.

// Поэтому предварительно вам нужно убрать из них мусор и конвертировать в числа.
// Под мусором имеются ввиду лишние символы и спец знаки. Разрешается использовать только определенные пакеты: fmt, strconv, unicode, strings,  bytes.

// %^80 hhhhh20&&&&nd
// 100

package main

import (
	"strconv"
	"unicode"
)

func main() {
	adding("%^80 hhhhh20&&&&nd")
}

func adding(s string) int64 {
	var (
		strsNum []string
		strNum string
		sum int64
	)
	for _, symbol := range s {
		if unicode.IsDigit(symbol) {
			strNum += string(symbol)
		} else {
			if strNum == "" {
				continue
            }
			strsNum = append(strsNum, strNum)
			strNum = ""
		}
	}
	for _, strNum = range strsNum {
		res, _ := strconv.ParseInt(strNum, 0, 64)
		sum += res
	}
	return sum
}
